openapi: 3.0.3
info:
  title: harena
  description: harena
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /personnes/{nom_personne}/patrimoines:
    get:
      tags:
        - patrimoine
      operationId: getPatrimoines
      parameters:
        - $ref: "#/components/parameters/nom_personne"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      responses:
        200:
          description: liste paginée de patrimoines
          content:
            "application/json":
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Patrimoine"
  /personnes/{nom_personne}/patrimoines/{nom_patrimoine}:
    get:
      tags:
        - patrimoine
        - projection_future
      operationId: getPatrimoineByNom
      description: sert à obtenir la valeur d'un patrimoine dans un intervalle de date.
      parameters:
        - $ref: "#/components/parameters/nom_personne"
        - $ref: "#/components/parameters/nom_patrimoine"
        - name: date_de_debut_projection
          in: query
          schema:
            type: string
            format: date
        - name: date_de_fin_projection
          in: query
          schema:
            type: string
            format: date
      responses:
        200:
          description: patrimoines projetés ou non selon un intervalle de date
          content:
            "application/json":
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Patrimoine"
  /personnes/{nom_personne}/patrimoines/{nom_patrimoine}/possessions/{nom_possession}:
    parameters:
      - $ref: "#/components/parameters/nom_personne"
      - $ref: "#/components/parameters/nom_patrimoine"
      - name: nom_possession
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - possession
        - projection_future
      operationId: getPatrimoinePossessionByNom
      description: sert à obtenir la valeur d'une possession dans un intervalle de date.
      parameters:
        - name: date_de_debut_projection
          in: query
          schema:
            type: string
            format: date
        - name: date_de_fin_projection
          in: query
          schema:
            type: string
            format: date
      responses:
        200:
          description: résultat de la projection de la possession sous forme de liste
          content:
            "application/json":
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Possession"
    delete:
      tags:
        - possession
      operationId: deletePatrimoinePossession
      responses:
        204:
          description: la possession supprimée
  /patrimoines/{nom_personne}/patrimoines/{nom_patrimoine}/argents:
    put:
      tags:
        - possession
      operationId: crupdatePatrimoineArgents
      parameters:
        - $ref: "#/components/parameters/nom_personne"
        - $ref: "#/components/parameters/nom_patrimoine"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      requestBody:
        description: liste d'argent à ajouter ou modifier
        content:
          "application/json":
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/Argent"
      responses:
        200:
          description: liste d'argent ajoutés ou modifiés
          content:
            "application/json":
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Argent"
  /personnes/{nom_personne}/patrimoines/{nom_patrimoine}/materiels:
    put:
      tags:
        - possession
      operationId: crupdatePatrimoineMateriels
      parameters:
        - $ref: "#/components/parameters/nom_personne"
        - $ref: "#/components/parameters/nom_patrimoine"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      requestBody:
        description: liste de matériels à ajouter ou modifier
        content:
          "application/json":
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/Materiel"
      responses:
        200:
          description: liste de matériels ajoutés ou modifiés
          content:
            "application/json":
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Materiel"
  /personnes/{nom_personne}/patrimoines/{nom_patrimoine}/flux_argents:
    put:
      tags:
        - possession
      operationId: crupdatePatrimoineFluxArgents
      parameters:
        - $ref: "#/components/parameters/nom_personne"
        - $ref: "#/components/parameters/nom_patrimoine"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
      requestBody:
        description: liste de flux argents à ajouter ou modifier
        content:
          "application/json":
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/FluxArgent"
      responses:
        200:
          description: liste de flux argents ajoutés ou modifiés
          content:
            "application/json":
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/FluxArgent"
  /personne/{nom_personne}/patrimoines/{nom_patrimoine}/transfert_argent:
    put:
      tags:
        - possession
      operationId: crupdatePatrimoineTransfert
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/page_size"
        - $ref: "#/components/parameters/nom_personne"
        - $ref: "#/components/parameters/nom_patrimoine"
      requestBody:
        description: liste des transfert à ajouter ou modifier
        content:
          "application/json":
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    $ref: "#/components/schemas/TransfertArgent"
      responses:
        200:
          description: liste des tansfert argent modifiés ou ajoutés
          content:
            "application/json":
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TransfertArgent"
components:
  parameters:
    nom_personne:
      name: nom_personne
      required: true
      in: path
      schema:
        type: string
    nom_patrimoine:
      name: nom_patrimoine
      required: true
      in: path
      schema:
        type: string
    page:
      name: page
      in: query
      schema:
        type: integer
    page_size:
      name: page_size
      in: query
      schema:
        type: integer

  responses:
    bad_request:
      description: Bad request response when the request sent to the server was in the wrong format
      content:
        "application/json":
          schema:
            type: object
            properties:
              message:
                type: string
                example: Invalid value given

  schemas:
    Personne:
      type: object
      properties:
        nom:
          type: string
    Devise:
      type: object
      properties:
        nom:
          type: string
    Possession:
      type: object
      properties:
        type:
          type: string
          enum:
            - ARGENT
            - POSSESSION
            - MATERIEL
            - FLUXARGENT
        nom:
          type: string
        t:
          description: date de possession
          type: string
          format: date
        valeur_comptable:
          type: integer
        devise:
          $ref: "#/components/schemas/Devise"
    Patrimoine:
      type: object
      properties:
        nom:
          type: string
        possesseur:
          $ref: "#/components/schemas/Personne"
        t:
          type: string
          format: date
        valeur_comptable:
          type: integer
    Argent:
      type: object
      allOf:
        - $ref: "#/components/schemas/Possession"
        - properties:
            date_d_ouverture:
              type: string
              format: date
            type:
              type: string
              enum:
                - DETTE
                - CREANCE
                - AUTRES
    Materiel:
      type: object
      allOf:
        - $ref: "#/components/schemas/Possession"
        - properties:
            date_d_acquisition:
              type: string
              format: date
            taux_dappreciation_annuel:
              type: number
              format: double
    FluxArgent:
      type: object
      allOf:
        - $ref: "#/components/schemas/Possession"
        - properties:
            argent:
              $ref: "#/components/schemas/Argent"
            debut:
              type: string
              format: date
            fin:
              type: string
              format: date
            flux_mensuel:
              type: integer
            date_d_operation:
              type: integer
    AchatMaterielAuComptant:
      type: object
      allOf:
        - $ref: "#/components/schemas/Possession"
        - properties:
            taux_dappreciation_annuel:
              type: number
              format: double
            financeur:
              type: string
              description: nom de l'Argent qui finnance l'achat
    TransfertArgent:
      type: object
      allOf:
        - $ref: "#/components/schemas/Patrimoine"
        - properties:
            depuis_argent:
              type: string
              description: nom de l'argent source du tansfert
            vers_argent:
              type: string
              description: nom de l'argent destinataire du tansfert
            fin:
              type: string
              format: date